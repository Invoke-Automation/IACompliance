#          YAML Reference Guide: https://www.appveyor.com/docs/appveyor-yml/
# Environmental Variables Guide: https://www.appveyor.com/docs/environment-variables/
#                YAML Validator: https://ci.appveyor.com/tools/validate-yaml

version: 0.1.{build}.0

# scripts that are called at very beginning, before repo cloning
init:
  - git config --global core.autocrlf input
  - git config --global user.email "tomas.deceuninck@gmail.com"
  - git config --global user.name "Tomas Deceuninck"  

# Only build commits to these branches
branches:
    only:
      - master
      - dev

# Ignore testing a commit if only the README.md file changed
# Or if various strings are found in the commit message: updated readme, update readme, update docs, update version, update appveyor
skip_commits:
  files:
    - README.md
    - CONTRIBUTING.md
    - .github/
    - .vscode/
  message: /updated readme.*|update readme.*s|update docs.*|update version.*|update appveyor.*/

# Do not build on tags
skip_tags: true

# There's no need to alter the build number for a Pull Request (PR) since they don't modify anything
pull_requests:
  do_not_increment_build_number: true

# PowerShell Gallery API key for publishing an update to the module
# The "secure:" value is the Appveyor encryption of the key
environment:
  NuGetApiKey:
    secure: yPYUYzpttyLw7Mq/97hPGOC0TPb64MlsVl5O6uzpPixgbmXjm+lv+6BImdzMWDZk
  GitHubKey:
    secure: lpvXEmnT6cnoq/CDBB1lrc3UaEP2EBbQz6iIHc1pRi9QB8SUwVF3Xs+/5ctuKTE0

# Install NuGet to interact with the PowerShell Gallery
install:
- ps: |
    Install-PackageProvider -Name NuGet -Force | Out-Null
    Install-Module -Name InvokeBuild -Force | Out-Null
    Install-Module -Name Pester -Force | Out-Null
    Install-Module -Name PSScriptAnalyzer -Force | Out-Null
    Install-Module -Name PlatyPS -Force | Out-Null
    #Install-Module -Name posh-git -Force | Out-Null

# run your custom scripts instead of automatic MSBuild
build_script:
  - ps: Invoke-Build -Task AppVeyorBuild

# Invoke Pester to run all of the unit tests, then save the results into XML in order to populate the AppVeyor tests section
# If any of the tests fail, consider the pipeline failed
test_script:
  - ps: Invoke-Build -Task PesterTests

# scripts to run before deployment 
deploy_script: 
  - ps: Invoke-Build -Task AppVeyorPublish