. $PSScriptRoot\_InitializeTests.ps1

Describe 'Get-ComplianceReport' -Tag 'Report' {
	It 'Should return a ComplianceReport object when -PassThru parameter was given' {
		$report = Get-ComplianceReport 'Name Compliance' -Checks @($TestReportCheck1,$TestReportCheck2) -Silent -PassThru
		$report.GetType().Name | Should -BeLike 'IAComplianceReport'
	}
	It 'Should check all non-null objects generated by inputscript if no PreCheck is defined' {
		$report = Get-ComplianceReport 'Name Compliance' -Checks @($TestReportCheck2) -PassThru -Silent
		$report.Results | Select-Object -Unique Object | measure | % count | Should -BeExactly 4
	}
	It 'Should check all non-null objects generated by inputscript that comply with the pre-check' {
		$report = Get-ComplianceReport 'Name Compliance' -Checks @($TestReportCheck1) -PassThru -Silent
		$report.Results | Select-Object -Unique Object | measure | % count | Should -BeExactly 3
	}
	Describe 'Host Output' {
		Mock Write-Host {} -ModuleName IACompliance

		It 'Should write the ToString() value of each object once before it checks its compliance for each rule in green' {
			Get-ComplianceReport 'Name Compliance' -Checks @($TestReportCheck1,$TestReportCheck2)
			Assert-MockCalled Write-Host -Times (($TestReportcheckInput | Where-Object{$_ -ne $null}).Count * 2) -ParameterFilter {$ForegroundColor -eq [ConsoleColor]'Green'} -Scope It -ModuleName IACompliance
		}
		It 'Should write rules with which an object is not compliant in darkred' {
			Get-ComplianceReport 'Name Compliance' -Checks @($TestReportCheck1,$TestReportCheck2)
			Assert-MockCalled Write-Host -Times 3 -ParameterFilter {$ForegroundColor -eq [ConsoleColor]'DarkRed'} -Scope It -ModuleName IACompliance
		}
		It 'Should write rules with with an object is compliant in darkgreen' {
			Get-ComplianceReport 'Name Compliance' -Checks @($TestReportCheck1,$TestReportCheck2)
			Assert-MockCalled Write-Host -Times 7 -ParameterFilter {$ForegroundColor -eq [ConsoleColor]'DarkGreen'} -Scope It -ModuleName IACompliance
		}
		It 'Should not write anything if -Silent parameter was given' {
			Get-ComplianceReport 'Name Compliance' -Checks @($TestReportCheck1,$TestReportCheck2) -Silent
			Assert-MockCalled Write-Host -Times 0 -Scope It -ModuleName IACompliance
		}
	}
}
